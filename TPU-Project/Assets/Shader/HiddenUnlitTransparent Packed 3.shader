Shader "Hidden/Unlit/Transparent Packed 3" {
	Properties {
		_MainTex ("Base (RGB), Alpha (A)", 2D) = "black" {}
	}
	SubShader {
		LOD 200
		Tags { "DisableBatching" = "true" "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		Pass {
			LOD 200
			Tags { "DisableBatching" = "true" "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ZWrite Off
			Cull Off
			Offset -1, -1
			Fog {
				Mode Off
			}
			GpuProgramID 25733
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _ClipArgs1;
					//   float4 _ClipArgs2;
					//   float4 _ClipRange0;
					//   float4 _ClipRange1;
					//   float4 _ClipRange2;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _ClipRange0         c8       1
					//   _ClipRange1         c9       1
					//   _ClipArgs1          c10      1
					//   _ClipRange2         c11      1
					//   _ClipArgs2          c12      1
					//
					
					    vs_3_0
					    def c13, 1, 0, 0, 0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    dcl_position o0
					    dcl_color o1
					    dcl_texcoord o2.xy
					    dcl_texcoord1 o3
					    dcl_texcoord2 o4.xy
					    mad r0, v0.xyzx, c13.xxxy, c13.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o3.xy, v0, c8.zwzw, c8
					    mul r0.xyz, c10.zzww, v0.yxyw
					    mad r1.z, v0.x, c10.w, -r0.x
					    add r1.w, r0.z, r0.y
					    mad o3.zw, r1, c9, c9.xyxy
					    mul r0.xyz, c12.zzww, v0.yxyw
					    mad r1.x, v0.x, c12.w, -r0.x
					    add r1.y, r0.z, r0.y
					    mad o4.xy, r1, c11.zwzw, c11
					    mov o1, v1
					    mov o2.xy, v2
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 22 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 2     zw        2     NONE   float     zw
					// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xyzw
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o1.xyzw, v1.xyzw
					mul r0.x, v0.y, cb0[7].z
					mad r0.z, v0.x, cb0[7].w, -r0.x
					dp2 r0.w, v0.xyxx, cb0[7].zwzz
					mad o2.zw, r0.zzzw, cb0[6].zzzw, cb0[6].xxxy
					mov o2.xy, v2.xyxx
					mul r0.x, v0.y, cb0[5].z
					mad r0.z, v0.x, cb0[5].w, -r0.x
					dp2 r0.w, v0.xyxx, cb0[5].zwzz
					mad o3.zw, r0.zzzw, cb0[4].zzzw, cb0[4].xxxy
					mad o3.xy, v0.xyxx, cb0[2].zwzz, cb0[2].xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _ClipArgs0;
					//   float4 _ClipArgs1;
					//   float4 _ClipArgs2;
					//   sampler2D _MainTex;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _ClipArgs0   c0       1
					//   _ClipArgs1   c1       1
					//   _ClipArgs2   c2       1
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    def c3, -0.5, 0.50999999, -2.04081631, 1
					    dcl_color_pp v0
					    dcl_texcoord v1.xy
					    dcl_texcoord1 v2
					    dcl_texcoord2 v3.xy
					    dcl_2d s0
					    add_pp r0, c3.x, v0
					    frc_pp r1, -r0
					    add_sat_pp r0, r0, r1
					    texld_pp r1, v1, s0
					    mul_pp r1.xy, r0, r1
					    add_pp r1.x, r1.y, r1.x
					    mad_pp r1.x, r1.z, r0.z, r1.x
					    mad_pp r1.x, r1.w, r0.w, r1.x
					    mad_pp r0, r0, c3.y, -v0
					    mul_sat_pp r0, r0, c3.z
					    add r2, c3.w, -v2_abs
					    mul r1.yz, r2.xxyw, c0.xxyw
					    mul r2.xy, r2.zwzw, c1
					    min r1.w, r2.y, r2.x
					    min r2.x, r1.z, r1.y
					    min r3.x, r1.w, r2.x
					    add r1.yz, c3.w, -v3_abs.xxyw
					    mul r1.yz, r1, c2.xxyw
					    min r2.x, r1.z, r1.y
					    min_sat r1.y, r2.x, r3.x
					    mul_pp r0.w, r0.w, r1.y
					    mov_pp oC0.xyz, r0
					    mul_pp oC0.w, r1.x, r0.w
					
					// approximately 23 instruction slots used (1 texture, 22 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 2     zw        2     NONE   float     zw
					// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyzw
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyzw, v1.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					round_pi_sat r0.xyzw, r0.xyzw
					sample r1.xyzw, v2.xyxx, t0.xyzw, s0
					mul r1.xy, r0.xyxx, r1.xyxx
					add r1.x, r1.y, r1.x
					mad r1.x, r1.z, r0.z, r1.x
					mad r1.x, r1.w, r0.w, r1.x
					mad r0.xyzw, r0.xyzw, l(0.510000, 0.510000, 0.510000, 0.510000), -v1.xyzw
					mul_sat r0.xyzw, r0.xyzw, l(-2.040816, -2.040816, -2.040816, -2.040816)
					add r2.xyzw, -|v3.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					mul r1.yz, r2.xxyx, cb0[3].xxyx
					mul r2.xy, r2.zwzz, cb0[5].xyxx
					min r1.w, r2.y, r2.x
					min r1.y, r1.z, r1.y
					min r1.y, r1.w, r1.y
					add r1.zw, -|v2.zzzw|, l(0.000000, 0.000000, 1.000000, 1.000000)
					mul r1.zw, r1.zzzw, cb0[7].xxxy
					min r1.z, r1.w, r1.z
					min_sat r1.y, r1.z, r1.y
					mul r0.w, r0.w, r1.y
					mov o0.xyz, r0.xyzx
					mul o0.w, r1.x, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}