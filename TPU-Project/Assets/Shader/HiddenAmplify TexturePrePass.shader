Shader "Hidden/Amplify Texture/PrePass" {
	Properties {
		_Cutoff ("Alpha cutoff", Range(0, 1)) = 0.5
		_MainTex ("Base (RGB)", 2D) = "white" {}
		_VTInfoBlock ("VT (auto)", Vector) = (0,0,0,0)
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "Opaque" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "Opaque" }
			Fog {
				Mode Off
			}
			GpuProgramID 38454
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _VTBorderAndPrePass;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTBorderAndPrePass        c1       1
					//   _VTMipInfo                 c2       1
					//   _VTInfoBlock               c3       1
					//   _VTPageTableDesc           s0       1
					//
					
					    ps_3_0
					    def c4, 0, 255, 0.5, 1
					    def c5, 16, 0.00390625, 256, 0.00392156886
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    abs r0.xyz, c3.zzww
					    frc r0.xzw, r0.xyyz
					    add r0.x, r0.y, -r0.x
					    mul r1.xy, r0.x, c0
					    mov r1.zw, c4.x
					    texldl r1, r1, s0
					    mad r0.xy, r1, c4.y, c4.z
					    frc r1.xy, r0
					    add r0.xy, r0, -r1
					    exp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r1.xy, r0.x, c3
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c1.zwzw
					    dsx r1.zw, r1.xyxy
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c4.x
					    dp2add r1.x, r1.zwzw, r1.zwzw, c4.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c4.z
					    mad r1.x, r1.x, -c4.z, r1.y
					    min r2.x, c2.y, r1.x
					    mad r0.x, r0.x, c4.z, -r2.x
					    max r1.x, r0.x, c4.x
					    add r0.x, r1.x, c2.w
					    frc r1.xyz, v0
					    cmp r1.w, -r1.z, c4.x, c4.w
					    cmp r1.w, v0.z, c4.x, r1.w
					    add r1.z, -r1.z, v0.z
					    add r1.z, r1.w, r1.z
					    mad r2.z, r1.z, c5.x, r0.x
					    mov_sat r1.zw, v0.xyxy
					    cmp r1.xy, c3.w, r1, r1.zwzw
					    mad r0.xz, r1.xyyw, c3.xyyw, r0.zyww
					    mul r0.xy, r0.y, r0.xzzw
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    mul r0.zw, r0.xyxy, c5.y
					    frc r0.zw, r0
					    mad r0.xy, r0, c5.y, -r0.zwzw
					    mul r0.zw, r0, c5.z
					    mad r2.w, r0.y, c5.x, r0.x
					    frc r0.xy, r0.zwzw
					    add r2.xy, -r0, r0.zwzw
					    mul oC0, r2, c5.w
					
					// approximately 53 instruction slots used (2 texture, 51 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
					mad r0.xy, r0.xyxx, l(255.000000, 255.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xy, r0.xyxx
					exp r0.xy, r0.xyxx
					mul r0.xz, r0.xxxx, cb0[8].xxyx
					mul r0.xz, r0.xxzx, v1.xxyx
					mul r0.xz, r0.xxzx, cb0[5].zzwz
					deriv_rtx r1.xy, r0.xzxx
					deriv_rty r0.xz, r0.xxzx
					dp2 r0.x, r0.xzxx, r0.xzxx
					dp2 r0.z, r1.xyxx, r1.xyxx
					min r0.w, r0.x, r0.z
					max r0.x, r0.x, r0.z
					log r0.x, r0.x
					log r0.z, r0.w
					mul r0.w, r0.x, l(0.500000)
					mad r0.z, -r0.z, l(0.500000), r0.w
					min r0.z, r0.z, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r0.z
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					round_z r0.z, v1.z
					mad r1.z, r0.z, l(16.000000), r0.x
					ge r0.x, cb0[8].w, l(0.000000)
					frc r0.zw, v1.xxxy
					mov_sat r2.xy, v1.xyxx
					movc r0.xz, r0.xxxx, r0.zzwz, r2.xxyx
					frc r2.xy, |cb0[8].zwzz|
					mad r0.xz, r0.xxzx, cb0[8].xxyx, r2.xxyx
					mul r0.xy, r0.yyyy, r0.xzxx
					round_ni r0.xy, r0.xyxx
					mul r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.003906, 0.003906)
					frc r0.zw, r0.zzzw
					mad r0.xy, r0.xyxx, l(0.003906, 0.003906, 0.000000, 0.000000), -r0.zwzz
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 256.000000, 256.000000)
					round_ni r1.xy, r0.zwzz
					mad r1.w, r0.y, l(16.000000), r0.x
					mul o0.xyzw, r1.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TransparentCutout" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TransparentCutout" }
			Fog {
				Mode Off
			}
			GpuProgramID 118866
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeBark" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeBark" }
			Fog {
				Mode Off
			}
			GpuProgramID 158035
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _VTBorderAndPrePass;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTBorderAndPrePass        c1       1
					//   _VTMipInfo                 c2       1
					//   _VTInfoBlock               c3       1
					//   _VTPageTableDesc           s0       1
					//
					
					    ps_3_0
					    def c4, 0, 255, 0.5, 1
					    def c5, 16, 0.00390625, 256, 0.00392156886
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    abs r0.xyz, c3.zzww
					    frc r0.xzw, r0.xyyz
					    add r0.x, r0.y, -r0.x
					    mul r1.xy, r0.x, c0
					    mov r1.zw, c4.x
					    texldl r1, r1, s0
					    mad r0.xy, r1, c4.y, c4.z
					    frc r1.xy, r0
					    add r0.xy, r0, -r1
					    exp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r1.xy, r0.x, c3
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c1.zwzw
					    dsx r1.zw, r1.xyxy
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c4.x
					    dp2add r1.x, r1.zwzw, r1.zwzw, c4.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c4.z
					    mad r1.x, r1.x, -c4.z, r1.y
					    min r2.x, c2.y, r1.x
					    mad r0.x, r0.x, c4.z, -r2.x
					    max r1.x, r0.x, c4.x
					    add r0.x, r1.x, c2.w
					    frc r1.xyz, v0
					    cmp r1.w, -r1.z, c4.x, c4.w
					    cmp r1.w, v0.z, c4.x, r1.w
					    add r1.z, -r1.z, v0.z
					    add r1.z, r1.w, r1.z
					    mad r2.z, r1.z, c5.x, r0.x
					    mov_sat r1.zw, v0.xyxy
					    cmp r1.xy, c3.w, r1, r1.zwzw
					    mad r0.xz, r1.xyyw, c3.xyyw, r0.zyww
					    mul r0.xy, r0.y, r0.xzzw
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    mul r0.zw, r0.xyxy, c5.y
					    frc r0.zw, r0
					    mad r0.xy, r0, c5.y, -r0.zwzw
					    mul r0.zw, r0, c5.z
					    mad r2.w, r0.y, c5.x, r0.x
					    frc r0.xy, r0.zwzw
					    add r2.xy, -r0, r0.zwzw
					    mul oC0, r2, c5.w
					
					// approximately 53 instruction slots used (2 texture, 51 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
					mad r0.xy, r0.xyxx, l(255.000000, 255.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xy, r0.xyxx
					exp r0.xy, r0.xyxx
					mul r0.xz, r0.xxxx, cb0[8].xxyx
					mul r0.xz, r0.xxzx, v1.xxyx
					mul r0.xz, r0.xxzx, cb0[5].zzwz
					deriv_rtx r1.xy, r0.xzxx
					deriv_rty r0.xz, r0.xxzx
					dp2 r0.x, r0.xzxx, r0.xzxx
					dp2 r0.z, r1.xyxx, r1.xyxx
					min r0.w, r0.x, r0.z
					max r0.x, r0.x, r0.z
					log r0.x, r0.x
					log r0.z, r0.w
					mul r0.w, r0.x, l(0.500000)
					mad r0.z, -r0.z, l(0.500000), r0.w
					min r0.z, r0.z, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r0.z
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					round_z r0.z, v1.z
					mad r1.z, r0.z, l(16.000000), r0.x
					ge r0.x, cb0[8].w, l(0.000000)
					frc r0.zw, v1.xxxy
					mov_sat r2.xy, v1.xyxx
					movc r0.xz, r0.xxxx, r0.zzwz, r2.xxyx
					frc r2.xy, |cb0[8].zwzz|
					mad r0.xz, r0.xxzx, cb0[8].xxyx, r2.xxyx
					mul r0.xy, r0.yyyy, r0.xzxx
					round_ni r0.xy, r0.xyxx
					mul r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.003906, 0.003906)
					frc r0.zw, r0.zzzw
					mad r0.xy, r0.xyxx, l(0.003906, 0.003906, 0.000000, 0.000000), -r0.zwzz
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 256.000000, 256.000000)
					round_ni r1.xy, r0.zwzz
					mad r1.w, r0.y, l(16.000000), r0.x
					mul o0.xyzw, r1.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeLeaf" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeLeaf" }
			Fog {
				Mode Off
			}
			GpuProgramID 230808
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeOpaque" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeOpaque" }
			Fog {
				Mode Off
			}
			GpuProgramID 322486
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _VTBorderAndPrePass;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTBorderAndPrePass        c1       1
					//   _VTMipInfo                 c2       1
					//   _VTInfoBlock               c3       1
					//   _VTPageTableDesc           s0       1
					//
					
					    ps_3_0
					    def c4, 0, 255, 0.5, 1
					    def c5, 16, 0.00390625, 256, 0.00392156886
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    abs r0.xyz, c3.zzww
					    frc r0.xzw, r0.xyyz
					    add r0.x, r0.y, -r0.x
					    mul r1.xy, r0.x, c0
					    mov r1.zw, c4.x
					    texldl r1, r1, s0
					    mad r0.xy, r1, c4.y, c4.z
					    frc r1.xy, r0
					    add r0.xy, r0, -r1
					    exp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r1.xy, r0.x, c3
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c1.zwzw
					    dsx r1.zw, r1.xyxy
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c4.x
					    dp2add r1.x, r1.zwzw, r1.zwzw, c4.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c4.z
					    mad r1.x, r1.x, -c4.z, r1.y
					    min r2.x, c2.y, r1.x
					    mad r0.x, r0.x, c4.z, -r2.x
					    max r1.x, r0.x, c4.x
					    add r0.x, r1.x, c2.w
					    frc r1.xyz, v0
					    cmp r1.w, -r1.z, c4.x, c4.w
					    cmp r1.w, v0.z, c4.x, r1.w
					    add r1.z, -r1.z, v0.z
					    add r1.z, r1.w, r1.z
					    mad r2.z, r1.z, c5.x, r0.x
					    mov_sat r1.zw, v0.xyxy
					    cmp r1.xy, c3.w, r1, r1.zwzw
					    mad r0.xz, r1.xyyw, c3.xyyw, r0.zyww
					    mul r0.xy, r0.y, r0.xzzw
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    mul r0.zw, r0.xyxy, c5.y
					    frc r0.zw, r0
					    mad r0.xy, r0, c5.y, -r0.zwzw
					    mul r0.zw, r0, c5.z
					    mad r2.w, r0.y, c5.x, r0.x
					    frc r0.xy, r0.zwzw
					    add r2.xy, -r0, r0.zwzw
					    mul oC0, r2, c5.w
					
					// approximately 53 instruction slots used (2 texture, 51 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
					mad r0.xy, r0.xyxx, l(255.000000, 255.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xy, r0.xyxx
					exp r0.xy, r0.xyxx
					mul r0.xz, r0.xxxx, cb0[8].xxyx
					mul r0.xz, r0.xxzx, v1.xxyx
					mul r0.xz, r0.xxzx, cb0[5].zzwz
					deriv_rtx r1.xy, r0.xzxx
					deriv_rty r0.xz, r0.xxzx
					dp2 r0.x, r0.xzxx, r0.xzxx
					dp2 r0.z, r1.xyxx, r1.xyxx
					min r0.w, r0.x, r0.z
					max r0.x, r0.x, r0.z
					log r0.x, r0.x
					log r0.z, r0.w
					mul r0.w, r0.x, l(0.500000)
					mad r0.z, -r0.z, l(0.500000), r0.w
					min r0.z, r0.z, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r0.z
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					round_z r0.z, v1.z
					mad r1.z, r0.z, l(16.000000), r0.x
					ge r0.x, cb0[8].w, l(0.000000)
					frc r0.zw, v1.xxxy
					mov_sat r2.xy, v1.xyxx
					movc r0.xz, r0.xxxx, r0.zzwz, r2.xxyx
					frc r2.xy, |cb0[8].zwzz|
					mad r0.xz, r0.xxzx, cb0[8].xxyx, r2.xxyx
					mul r0.xy, r0.yyyy, r0.xzxx
					round_ni r0.xy, r0.xyxx
					mul r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.003906, 0.003906)
					frc r0.zw, r0.zzzw
					mad r0.xy, r0.xyxx, l(0.003906, 0.003906, 0.000000, 0.000000), -r0.zwzz
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 256.000000, 256.000000)
					round_ni r1.xy, r0.zwzz
					mad r1.w, r0.y, l(16.000000), r0.x
					mul o0.xyzw, r1.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "_ALPHATEST_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeTransparentCutout" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeTransparentCutout" }
			Fog {
				Mode Off
			}
			GpuProgramID 330649
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeBillboard" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "TreeBillboard" }
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 422079
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "GrassBillboard" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "GrassBillboard" }
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 459987
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "Grass" }
		Pass {
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "RenderType" = "Grass" }
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 588571
			Program "vp" {
				SubProgram "d3d9 " {
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ScreenParams;
					//   float4 _VTInfoBlock;
					//   float4 _VTPrePassTransform;
					//   float4 _VTRemapIndices[64];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _VTRemapIndices     c0      64
					//   unity_ObjectToWorld c64      4
					//   unity_MatrixVP      c68      4
					//   _ScreenParams       c72      1
					//   _VTInfoBlock        c73      1
					//   _VTPrePassTransform c74      1
					//   _MainTex_ST         c75      1
					//
					
					    vs_3_0
					    def c80, 0.25, 4, 8, -4
					    def c76, 1, 0, 0, 0
					    def c77, 0, 1, 0, 0
					    def c78, 0, 0, 1, 0
					    def c79, 0, 0, 0, 1
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    mad r0, v0.xyzx, c76.xxxw, c76.yyzx
					    dp4 r1.x, c64, r0
					    dp4 r1.y, c65, r0
					    dp4 r1.z, c66, r0
					    dp4 r1.w, c67, r0
					    dp4 r2.z, c70, r1
					    dp4 r2.w, c71, r1
					    dp4 r0.x, c68, r1
					    dp4 r0.y, c69, r1
					    mov r1.xw, c76
					    add r0.zw, -r1.x, c72
					    mad r2.xy, r0.zwzw, c74, r0
					    abs r0.x, c73.z
					    frc r0.y, r0.x
					    add r0.x, r0.x, -r0.y
					    mul r0.yz, r0.x, c80.xxyw
					    sge r0.z, r0.z, -r0.z
					    mad r0.z, r0.z, c80.z, c80.w
					    rcp r0.w, r0.z
					    mul r0.x, r0.w, r0.x
					    frc r0.x, r0.x
					    mul r0.x, r0.x, r0.z
					    frc r0.z, r0.x
					    add r0.x, r0.x, -r0.z
					    mova a0.x, r0.x
					    frc r0.x, r0.y
					    add r0.x, r0.y, -r0.x
					    mova a0.y, r0.x
					    mov r0, c0[a0.y]
					    dp4 r0.w, r0, c76[a0.x]
					    sge r1.x, c73.z, r1.w
					    mad r0.xy, v1, c75, c75.zwzw
					    add r1.y, -r0.y, c76.x
					    lrp r0.z, r1.x, r0.y, r1.y
					    mov o1.xyz, r0.xzww
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 37 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { 0, 0, 1.000000, 0},
					                              { 0, 0, 0, 1.000000} }
					dcl_constantbuffer CB0[75], dynamicIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					add r1.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad o0.xy, r1.xyxx, cb0[9].xyxx, r0.xyxx
					mov o0.zw, r0.zzzw
					round_z r0.x, |cb0[8].z|
					mul r0.x, r0.x, l(0.250000)
					frc r0.y, r0.x
					mul r0.y, r0.y, l(4.000000)
					ftou r0.xy, r0.xyxx
					dp4 r0.w, cb0[r0.x + 10].xyzw, icb[r0.y + 0].xyzw
					ge r1.x, cb0[8].z, l(0.000000)
					mad r0.xy, v2.xyxx, cb0[74].xyxx, cb0[74].zwzz
					add r1.y, -r0.y, l(1.000000)
					movc r0.z, r1.x, r0.y, r1.y
					mov o1.xyz, r0.xzwx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Cutoff;
					//   float4 _VTBorderAndPrePass;
					//   sampler2D _VTDiffuseCache;
					//   float4 _VTInfoBlock;
					//   float4 _VTMipInfo;
					//   sampler2D _VTPageTable;
					//   sampler2D _VTPageTableDesc;
					//   float4 _VTPageTableDesc_TexelSize;
					//   float4 _VTPhysTableInfo;
					//   float4 _VTRcpPagesPerLine;
					//   float4 _VTTableAddrRange;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _VTPageTableDesc_TexelSize c0       1
					//   _VTRcpPagesPerLine         c1       1
					//   _VTPhysTableInfo           c2       1
					//   _VTBorderAndPrePass        c3       1
					//   _VTMipInfo                 c4       1
					//   _VTTableAddrRange          c5       1
					//   _VTInfoBlock               c6       1
					//   _Cutoff                    c7       1
					//   _VTPageTable               s0       1
					//   _VTDiffuseCache            s1       1
					//   _VTPageTableDesc           s2       1
					//
					
					    ps_3_0
					    def c8, 0, 255, 256, 0.5
					    def c9, 0.0078125, 0, 1, 16
					    def c10, 0.00390625, 0.00392156886, 0, 0
					    dcl_texcoord v0.xyz
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.zw, c8.x
					    abs r1.xyz, c6.zzww
					    frc r1.xzw, r1.xyyz
					    add r1.x, r1.y, -r1.x
					    mul r0.xy, r1.x, c0
					    texldl r0, r0, s2
					    mad r0, r0, c8.yyzz, c8.wwxx
					    frc r2, r0
					    add r0, r0, -r2
					    exp r0.x, r0.x
					    mul r1.xy, r0.x, c6
					    mul r1.xy, r1, v0
					    mul r1.xy, r1, c3.zwzw
					    dsx r2.xy, r1
					    dsy r1.xy, r1
					    dp2add r0.x, r1, r1, c8.x
					    dp2add r1.x, r2, r2, c8.x
					    min r2.x, r0.x, r1.x
					    max r2.y, r1.x, r0.x
					    log r0.x, r2.y
					    log r1.x, r2.x
					    mul r1.y, r0.x, c8.w
					    mad r1.x, r1.x, -c8.w, r1.y
					    min r2.x, c4.y, r1.x
					    mad r0.x, r0.x, c8.w, -r2.x
					    max r1.x, r0.x, c8.x
					    add r2.w, r1.x, c4.w
					    exp r0.x, r2.w
					    rcp r0.x, r0.x
					    exp r0.y, r0.y
					    mul r0.zw, r0, c9.x
					    frc r0.zw, r0
					    mul r1.x, r0.x, r0.y
					    mov_sat r3.xy, v0
					    frc r4.xyz, v0
					    cmp r3.xy, c6.w, r4, r3
					    mad r3.xy, r3, c6, r1.zwzw
					    mad r1.yz, v0.xxyw, c6.xxyw, r1.xzww
					    mul r1.yz, r0.y, r1
					    mul r1.yz, r0.x, r1
					    mul r1.yz, r1, c1.xzww
					    mul r3.zw, r1.x, r3.xyxy
					    rcp r0.x, r1.x
					    mul r1.xw, r0.y, r3.xyzy
					    mul r3.xy, r0.y, c2
					    frc r4.xy, r3.zwzw
					    add r3.zw, r3, -r4.xyxy
					    mul r0.xy, r0.x, r3.zwzw
					    mad r2.xy, r0, r3, r0.zwzw
					    mov r2.z, c8.x
					    texldl r0, r2, s0
					    mov r0.w, c8.w
					    mad r0.xyz, r0, c5, r0.w
					    frc r2.xyz, r0
					    add r0.xyz, r0, -r2
					    exp r0.z, r0.z
					    rcp r0.z, r0.z
					    mul r0.zw, r0.z, r1.xyxw
					    frc r0.zw, r0
					    mad r0.xy, r0.zwzw, c3.x, r0.yxzw
					    add r0.xy, r0, c3.y
					    mul r0.xy, r0, c1
					    dsx r0.zw, r1.xyyz
					    dsy r1.yz, r1
					    texldd r0, r0, s1, r0.zwzw, r1.yzzw
					    add r0, r0.w, -c7.x
					    texkill r0
					    cmp r0.x, -r4.z, c9.y, c9.z
					    add r0.y, -r4.z, v0.z
					    cmp r0.x, v0.z, c8.x, r0.x
					    add r0.x, r0.x, r0.y
					    mad r0.z, r0.x, c9.w, r2.w
					    frc r1.yz, r1.xxww
					    add r1.xy, -r1.yzzw, r1.xwzw
					    mul r1.zw, r1.xyxy, c10.x
					    frc r1.zw, r1
					    mad r1.xy, r1, c10.x, -r1.zwzw
					    mul r1.zw, r1, c8.z
					    mad r0.w, r1.y, c9.w, r1.x
					    frc r1.xy, r1.zwzw
					    add r0.xy, -r1, r1.zwzw
					    mul oC0, r0, c10.y
					
					// approximately 92 instruction slots used (5 texture, 87 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[76], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					round_z r0.x, |cb0[8].z|
					mul r0.xy, r0.xxxx, cb0[2].xyxx
					sample_l r0.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
					mad r0.xyzw, r0.xyzw, l(255.000000, 255.000000, 256.000000, 256.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ni r0.xyzw, r0.xyzw
					mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.007813, 0.007813)
					exp r0.xy, r0.xyxx
					frc r0.zw, r0.zzzw
					mul r1.xy, r0.xxxx, cb0[8].xyxx
					mul r1.xy, r1.xyxx, v1.xyxx
					mul r1.xy, r1.xyxx, cb0[5].zwzz
					deriv_rtx r1.zw, r1.xxxy
					deriv_rty r1.xy, r1.xyxx
					dp2 r0.x, r1.xyxx, r1.xyxx
					dp2 r1.x, r1.zwzz, r1.zwzz
					min r1.y, r0.x, r1.x
					max r0.x, r0.x, r1.x
					log r0.x, r0.x
					log r1.x, r1.y
					mul r1.y, r0.x, l(0.500000)
					mad r1.x, -r1.x, l(0.500000), r1.y
					min r1.x, r1.x, cb0[6].y
					mad r0.x, r0.x, l(0.500000), -r1.x
					max r0.x, r0.x, l(0.000000)
					add r0.x, r0.x, cb0[6].w
					exp r1.x, r0.x
					div r1.y, r0.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					ge r1.z, cb0[8].w, l(0.000000)
					frc r2.xy, v1.xyxx
					mov_sat r2.zw, v1.xxxy
					movc r1.zw, r1.zzzz, r2.xxxy, r2.zzzw
					frc r2.xy, |cb0[8].zwzz|
					mad r1.zw, r1.zzzw, cb0[8].xxxy, r2.xxxy
					mad r2.xy, v1.xyxx, cb0[8].xyxx, r2.xyxx
					mul r2.xy, r0.yyyy, r2.xyxx
					mul r2.xy, r1.xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[3].zwzz
					mul r2.zw, r1.yyyy, r1.zzzw
					mul r1.xz, r0.yyyy, r1.zzwz
					mul r3.xy, r0.yyyy, cb0[4].xyxx
					round_ni r2.zw, r2.zzzw
					div r1.yw, r2.zzzw, r1.yyyy
					mad r0.yz, r1.yywy, r3.xxyx, r0.zzwz
					sample_l r3.xyzw, r0.yzyy, t1.xyzw, s0, r0.x
					mad r0.yzw, r3.xxyz, cb0[7].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
					round_ni r0.yzw, r0.yyzw
					exp r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.yw, r0.wwww, r1.xxxz
					round_ni r1.xz, r1.xxzx
					frc r1.yw, r1.yyyw
					mad r0.yz, r1.yywy, cb0[5].xxxx, r0.zzyz
					add r0.yz, r0.yyzy, cb0[5].yyyy
					mul r0.yz, r0.yyzy, cb0[3].xxyx
					deriv_rtx r1.yw, r2.xxxy
					deriv_rty r2.xy, r2.xyxx
					sample_d r2.xyzw, r0.yzyy, t2.xyzw, s1, r1.ywyy, r2.xyxx
					add r0.y, r2.w, -cb0[75].x
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					round_z r0.y, v1.z
					mad r0.z, r0.y, l(16.000000), r0.x
					mul r1.yw, r1.xxxz, l(0.000000, 0.003906, 0.000000, 0.003906)
					frc r1.yw, r1.yyyw
					mad r1.xz, r1.xxzx, l(0.003906, 0.000000, 0.003906, 0.000000), -r1.yywy
					mul r1.yw, r1.yyyw, l(0.000000, 256.000000, 0.000000, 256.000000)
					round_ni r0.xy, r1.ywyy
					mad r0.w, r1.z, l(16.000000), r1.x
					mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}